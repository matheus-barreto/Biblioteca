/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.TableView;

/**
 *
 * @author Administrador
 */
public class CadastroAutoria extends javax.swing.JFrame {

    BeanDiversos dv = new BeanDiversos();
    private String[] idObra;
    private String[] idAutor;
    private DefaultTableModel tabModel;

    /**
     * Creates new form CadastroAutoria
     */
    public CadastroAutoria() {
        dv.passaCamposComEnter(this);
        initComponents();
        this.tabModel = (DefaultTableModel) tabAutoria.getModel();
        SelecionarAutorias();
    }

    public String[] SelecionarObra() {
        int indice = 0;
        String[] dados = null;
        try {
            dv.Conexao();
            dv.sttm = dv.con.prepareStatement("Select nr_obra,titulo from obra order by titulo");
            ResultSet rsGenero = dv.sttm.executeQuery();
            rsGenero.last();
            dados = new String[rsGenero.getRow()];
            idObra = new String[rsGenero.getRow()];
            rsGenero.beforeFirst();
            while (rsGenero.next()) {
                idObra[indice] = rsGenero.getString("nr_obra");
                dados[indice] = rsGenero.getString("titulo");
                indice++;
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                dv.con.close();
            } catch (Exception ex) {
            }
        }
        return dados;
    }

    public String[] SelecionarAutor() {
        int indice = 0;
        String[] dados = null;
        try {
            dv.Conexao();
            dv.sttm = dv.con.prepareStatement("Select id_autor,nome from autor order by nome");
            ResultSet rsGenero = dv.sttm.executeQuery();
            rsGenero.last();
            dados = new String[rsGenero.getRow()];
            idAutor = new String[rsGenero.getRow()];
            rsGenero.beforeFirst();
            while (rsGenero.next()) {
                idAutor[indice] = rsGenero.getString("id_autor");
                dados[indice] = rsGenero.getString("nome");
                indice++;
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                dv.con.close();
            } catch (Exception ex) {
            }
        }
        return dados;
    }

    public void SelecionarAutorias() {
        try {
            dv.Conexao();
            dv.sttm = dv.con.prepareStatement("Select A.nr_obra,O.titulo,A.id_autor,AT.nome from autoria A, obra O, autor AT Where (A.nr_obra = O.nr_obra) and (A.id_autor = AT.id_autor) order by AT.nome, O.titulo");
            ResultSet rs = dv.sttm.executeQuery();
            while (rs.next()) {
                String[] linha = new String[]{rs.getString("nr_obra"), rs.getString("titulo"), rs.getString("id_autor"), rs.getString("nome")};
                tabModel.addRow(linha);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                dv.con.close();
            } catch (Exception ex) {
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabAutoria = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        codObra = new javax.swing.JComboBox();
        codAutor = new javax.swing.JComboBox();
        adicionar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        excluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Autoria");

        tabAutoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Obra", "Código", "Autor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabAutoria);
        if (tabAutoria.getColumnModel().getColumnCount() > 0) {
            tabAutoria.getColumnModel().getColumn(0).setMinWidth(10);
            tabAutoria.getColumnModel().getColumn(0).setPreferredWidth(50);
            tabAutoria.getColumnModel().getColumn(0).setMaxWidth(50);
            tabAutoria.getColumnModel().getColumn(1).setMinWidth(100);
            tabAutoria.getColumnModel().getColumn(1).setPreferredWidth(310);
            tabAutoria.getColumnModel().getColumn(1).setMaxWidth(310);
            tabAutoria.getColumnModel().getColumn(2).setMinWidth(10);
            tabAutoria.getColumnModel().getColumn(2).setPreferredWidth(50);
            tabAutoria.getColumnModel().getColumn(2).setMaxWidth(50);
            tabAutoria.getColumnModel().getColumn(3).setMinWidth(100);
            tabAutoria.getColumnModel().getColumn(3).setPreferredWidth(305);
            tabAutoria.getColumnModel().getColumn(3).setMaxWidth(305);
        }

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Obra");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Autor");

        codObra.setModel(new javax.swing.DefaultComboBoxModel(SelecionarObra()));

        codAutor.setModel(new javax.swing.DefaultComboBoxModel(SelecionarAutor()));

        adicionar.setText("Adicionar");
        adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarActionPerformed(evt);
            }
        });

        jButton3.setText("Sair");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        excluir.setText("Excluir");
        excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(codObra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(170, 170, 170)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(codAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(adicionar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(excluir)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codObra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adicionar)
                    .addComponent(excluir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void adicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarActionPerformed
        Iterator iterator = tabModel.getDataVector().iterator();
        String[] linha = new String[]{idObra[codObra.getSelectedIndex()], codObra.getSelectedItem().toString(), idAutor[codAutor.getSelectedIndex()], codAutor.getSelectedItem().toString()};
        boolean ok = false;
        // Checar se já existe a Obra e Autor na tabela
        while (iterator.hasNext()) {
            Vector row = (Vector) iterator.next();
            if (row.get(0).equals(idObra[codObra.getSelectedIndex()]) && row.get(2).equals(idAutor[codAutor.getSelectedIndex()])) {
                ok = true;
            }
        }
        try {
            if (!ok) {
                dv.Conexao();
                dv.sttm = dv.con.prepareStatement("Insert into autoria(nr_obra,id_autor) values(?,?)");
                dv.sttm.setString(1, idObra[codObra.getSelectedIndex()]);
                dv.sttm.setString(2, idAutor[codAutor.getSelectedIndex()]);
                dv.sttm.executeUpdate();
                dv.con.commit();
                tabModel.addRow(linha);
            } else {
                JOptionPane.showMessageDialog(null, "Obra e Autor já lançado...");
            }
        } catch (Exception e) {
            try {
                dv.con.rollback();
                e.printStackTrace();
            } catch (SQLException ex) {
            }
        } finally {
            try {
                dv.con.close();
            } catch (Exception ex) {
            }
        }
    }//GEN-LAST:event_adicionarActionPerformed

    private void excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirActionPerformed
        int linha = tabAutoria.getSelectedRow();
        int resp = -1;
        try {
            dv.Conexao();
            resp = JOptionPane.showConfirmDialog(null, "Confirma Exclusão dessa Obra e Autor ?");
            if (resp == 0) {
                dv.sttm = dv.con.prepareStatement("delete from autoria where nr_obra = ? and id_autor = ?");
                dv.sttm.setString(1, tabModel.getValueAt(linha, 0).toString());
                dv.sttm.setString(2, tabModel.getValueAt(linha, 2).toString());
                dv.sttm.executeUpdate();
                tabModel.removeRow(linha);
            }
            dv.con.commit();
        } catch (Exception e) {
            try {
                dv.con.rollback();
                e.printStackTrace();
            } catch (SQLException ex) {
            }
        } finally {
            try {
                dv.con.close();
            } catch (Exception ex) {
            }
        }
        
    }//GEN-LAST:event_excluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroAutoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroAutoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroAutoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroAutoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroAutoria().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionar;
    private javax.swing.JComboBox codAutor;
    private javax.swing.JComboBox codObra;
    private javax.swing.JButton excluir;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabAutoria;
    // End of variables declaration//GEN-END:variables
}
